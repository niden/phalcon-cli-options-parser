# This file is part of Phalcon.
#
# (c) Phalcon Team <team@phalcon.io>
#
# For the full copyright and license information, please view
# the LICENSE file that was distributed with this source code.

name: "Phalcon CI"

on:
  schedule:
    - cron: '0 2 * * *' # Daily at 02:00 runs only on default branch
  push:
    paths-ignore:
      - '**.md'
      - '**.txt'
  pull_request:
  workflow_dispatch:

env:
  fail-fast: true

  # All versions should be declared here
  CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}

permissions: { }
jobs:

  # PHP CodeSniffer inspection
  phpcs:
    name: "Validate Tests code style"
    if: "!contains(github.event.head_commit.message, 'ci skip')"

    permissions:
      contents: read

    runs-on: ubuntu-22.04

    strategy:
      fail-fast: true
      matrix:
        php:
          - '8.0'
          - '8.1'
          - '8.2'
          - '8.3'
          - '8.4'

    steps:
      - uses: actions/checkout@v4

      - name: "Setup PHP"
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: pecl
        env:
          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: "Install development dependencies with Composer"
        uses: "ramsey/composer-install@v3"
        with:
          composer-options: "--prefer-dist"

      - name: "PHPCS"
        run: |
          composer cs

      - name: "PHPStan"
        run: |
          composer analyze

  unit-tests:
    needs: phpcs

    permissions:
      contents: read # to fetch code (actions/checkout)

    name: Unit tests / PHP-${{ matrix.php }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php:
          - '8.0'
          - '8.1'
          - '8.2'
          - '8.3'
          - '8.4'

    steps:
      - uses: actions/checkout@v4

      - name: "Setup platform specific environment"
        shell: pwsh
        run: |
          git config --global core.autocrlf false

      - name: "Setup PHP"
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: pecl, composer:v2
          coverage: xdebug
        env:
          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: "Validate composer"
        run: composer validate --no-check-all --no-check-publish

      - name: "Install development dependencies with Composer"
        uses: "ramsey/composer-install@v3"
        with:
          composer-options: "--prefer-dist"

      - name: "Run Unit Tests"
        run: composer test-unit-coverage

      - name: "Upload coverage file artifact"
        uses: "actions/upload-artifact@v4"
        with:
          name: "unit-${{ matrix.php }}.coverage"
          path: "tests/_output/coverage.xml"


  upload-coverage:
    permissions:
      contents: read

    name: "Upload coverage"
    runs-on: "ubuntu-22.04"
    needs:
      - "unit-tests"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"
        with:
          fetch-depth: 0

      - name: "Display structure of downloaded files"
        run: |
          mkdir -p cv

      - name: "Download coverage files"
        uses: "actions/download-artifact@v4"
        with:
          path: "cv"

      - name: "Display structure of downloaded files"
        run: |
          mv cv/unit-8.0.coverage/coverage.xml      cv/01.xml
          mv cv/unit-8.1.coverage/coverage.xml      cv/02.xml
          mv cv/unit-8.2.coverage/coverage.xml      cv/04.xml
          mv cv/unit-8.3.coverage/coverage.xml      cv/05.xml
          mv cv/unit-8.4.coverage/coverage.xml      cv/06.xml
          ls -la cv/

      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v4.2.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: ./
          args: >
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            -Dsonar.sources=src/
            -Dsonar.exclusions=vendor/**,cv/**,tests/**
            -Dsonar.sourceEncoding=UTF-8
            -Dsonar.language=php
            -Dsonar.tests=tests/
            -Dsonar.php.coverage.reportPaths=cv/01.xml,cv/02.xml,cv/03.xml,cv/04.xml,cv/05.xml,cv/06.xml
